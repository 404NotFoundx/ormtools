/* ************************************************************************
 *
 * Copyright (C) 2020 tiansheng All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ************************************************************************/

/*
 * Creates on 2020/7/18.
 */

import org.jiakesimk.minipika.gradle.maven.MavenBuilder

plugins {
  id 'java'
  id 'groovy'
}

apply plugin: "java"
apply plugin: 'maven'
apply plugin: "groovy"
apply plugin: "maven-publish"

group = "org.jiakesimk"
version = "v1"
sourceCompatibility = "11"

ext {
  slf4jVersion = "1.7.21"
  mysqlConnectVersion = "8.0.20"
  commonsCodecVersion = "1.11"
  lombokVersion = "1.18.10"
  fastjsonVersion = "1.2.62"
  jsqlparseVersion = "3.1"
  jom2Version = "2.0.6"
  javassistVersion = "3.12.1.GA"
  logbackVersion = "1.2.3"
  junitVersion = "4.13-rc-2"
  asmToolVersion = "0.0.2"
  aspectJVersion = "1.8.10"
  groovyAllVersion = "3.0.4"
  kotlinVersion = "1.3.72"
}

sourceSets {
  main {
    java { srcDirs = [] }
    groovy {
      // noinspection GroovyAssignabilityCheck
      srcDirs = ["src/main/java", "src/main/groovy"]
    }
  }
  test {
    java { srcDirs = [] }
    groovy {
      // noinspection GroovyAssignabilityCheck
      srcDirs = ["src/test/java"]
    }
  }
}

allprojects {
  repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
  }
}

// 构建pom文件
install {
  repositories.mavenInstaller {
    pom {
      project {
        groupId = project.group
        artifactId = project.name
        version = project.version
      }
    }.withXml {
      def implementations = configurations.implementation.allDependencies
      MavenBuilder.buildMaven(implementations, asNode())
    }
  }
}
dependencies {
  implementation "org.jdom:jdom2:$jom2Version"
  implementation "org.slf4j:slf4j-api:$slf4jVersion"
  implementation "org.projectlombok:lombok:$lombokVersion"
  implementation "com.alibaba:fastjson:$fastjsonVersion"
  implementation "commons-codec:commons-codec:$commonsCodecVersion"
  implementation "com.github.jsqlparser:jsqlparser:$jsqlparseVersion"
  implementation "com.github.houbb:asm-tool:$asmToolVersion"
  implementation "commons-codec:commons-codec:${commonsCodecVersion}"
  implementation "javassist:javassist:${javassistVersion}"
  implementation "org.codehaus.groovy:groovy-all:$groovyAllVersion"
  implementation fileTree(dir: "lib", includes: ["*jar"])
  testImplementation "junit:junit:$junitVersion"
  testImplementation "mysql:mysql-connector-java:$mysqlConnectVersion"
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs << "-parameters" << "-Xlint:unchecked"
}

tasks.withType(GroovyCompile) {
  groovyOptions.encoding = "UTF-8"
  groovyOptions.parameters = true
}

